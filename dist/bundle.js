(()=>{"use strict";var e,t,s={538:()=>{let e=new class{constructor(){this.game=null,this.isMobile=null,this.scaleFactor=null,this.scaleFactorX=null,this.scaleFactorY=null,this.currentAspectRatio=null,this.originalAspectRatio=null,this.currentRatio=null,this.truckPosition=[{x:1532,y:222,scale:1},{x:1532,y:630,scale:1},{x:1532,y:630,scale:1}],this.updatedPosition=[{x:1532,y:200,scale:.7},{x:1532,y:475,scale:.7},{x:1532,y:750,scale:.7}],this.barsPos=[{x0:1508,x1:1220,x2:1508,y:400},{x0:1508,x1:1220,x2:1508,y:810},{x0:1508,x1:1220,x2:1508,y:1250}],this.updatedBarsPos=[{x0:1508,x1:1220,x2:1508,y:325},{x0:1508,x1:1220,x2:1508,y:600},{x0:1508,x1:1220,x2:1508,y:875}],this.scaleFactorArr=[{x1:.7,x2:0,y:.7},{x1:.7,x2:0,y:.7},{x1:.7,x2:0,y:.7}],this.updatedScaleFactorArr=[{x1:1,x2:0,y:1},{x1:1,x2:0,y:1},{x1:1,x2:0,y:1}],this.zonePos=[{y:217},{y:625}],this.updatedZonePos=[{x:1465,y:200},{x:1465,y:472},{x:1465,y:745}],this.scaleing=[{scaleX:0},{scaleX:0},{scaleX:0}],this.bigTruckPosition1=[{x:1230,y:175,isVacant:!0},{x:1275,y:175,isVacant:!0},{x:1320,y:175,isVacant:!0},{x:1365,y:175,isVacant:!0},{x:1410,y:175,isVacant:!0},{x:1455,y:175,isVacant:!0},{x:1500,y:175,isVacant:!0},{x:1545,y:175,isVacant:!0},{x:1590,y:175,isVacant:!0},{x:1635,y:175,isVacant:!0},{x:1635,y:217,isVacant:!0},{x:1635,y:260,isVacant:!0},{x:1590,y:260,isVacant:!0},{x:1545,y:260,isVacant:!0},{x:1500,y:260,isVacant:!0},{x:1455,y:260,isVacant:!0},{x:1410,y:260,isVacant:!0},{x:1365,y:260,isVacant:!0},{x:1320,y:260,isVacant:!0},{x:1275,y:260,isVacant:!0},{x:1230,y:260,isVacant:!0},{x:1230,y:218,isVacant:!0}],this.bigTruckPosition2=[{x:1230,y:585,isVacant:!0},{x:1275,y:585,isVacant:!0},{x:1320,y:585,isVacant:!0},{x:1365,y:585,isVacant:!0},{x:1410,y:585,isVacant:!0},{x:1455,y:585,isVacant:!0},{x:1500,y:585,isVacant:!0},{x:1545,y:585,isVacant:!0},{x:1590,y:585,isVacant:!0},{x:1635,y:585,isVacant:!0},{x:1635,y:628,isVacant:!0},{x:1635,y:670,isVacant:!0},{x:1590,y:670,isVacant:!0},{x:1545,y:670,isVacant:!0},{x:1500,y:670,isVacant:!0},{x:1455,y:670,isVacant:!0},{x:1410,y:670,isVacant:!0},{x:1365,y:670,isVacant:!0},{x:1320,y:670,isVacant:!0},{x:1275,y:670,isVacant:!0},{x:1230,y:670,isVacant:!0},{x:1230,y:630,isVacant:!0}],this.sTruckOne=[{x:1320,y:155,isVacant:!0},{x:1355,y:155,isVacant:!0},{x:1390,y:155,isVacant:!0},{x:1425,y:155,isVacant:!0},{x:1460,y:155,isVacant:!0},{x:1495,y:155,isVacant:!0},{x:1530,y:155,isVacant:!0},{x:1565,y:155,isVacant:!0},{x:1600,y:155,isVacant:!0},{x:1435,y:197,isVacant:!0},{x:1470,y:197,isVacant:!0},{x:1505,y:197,isVacant:!0},{x:1540,y:197,isVacant:!0},{x:1320,y:240,isVacant:!0},{x:1355,y:240,isVacant:!0},{x:1390,y:240,isVacant:!0},{x:1425,y:240,isVacant:!0},{x:1460,y:240,isVacant:!0},{x:1495,y:240,isVacant:!0},{x:1530,y:240,isVacant:!0},{x:1565,y:240,isVacant:!0},{x:1600,y:240,isVacant:!0}],this.sTruckTwo=[{x:1320,y:430,isVacant:!0},{x:1355,y:430,isVacant:!0},{x:1390,y:430,isVacant:!0},{x:1425,y:430,isVacant:!0},{x:1460,y:430,isVacant:!0},{x:1495,y:430,isVacant:!0},{x:1530,y:430,isVacant:!0},{x:1565,y:430,isVacant:!0},{x:1600,y:430,isVacant:!0},{x:1435,y:470,isVacant:!0},{x:1470,y:470,isVacant:!0},{x:1505,y:470,isVacant:!0},{x:1540,y:470,isVacant:!0},{x:1320,y:510,isVacant:!0},{x:1355,y:510,isVacant:!0},{x:1390,y:510,isVacant:!0},{x:1425,y:510,isVacant:!0},{x:1460,y:510,isVacant:!0},{x:1495,y:510,isVacant:!0},{x:1530,y:510,isVacant:!0},{x:1565,y:510,isVacant:!0},{x:1600,y:510,isVacant:!0}],this.sTruckThree=[{x:1320,y:710,isVacant:!0},{x:1355,y:710,isVacant:!0},{x:1390,y:710,isVacant:!0},{x:1425,y:710,isVacant:!0},{x:1460,y:710,isVacant:!0},{x:1495,y:710,isVacant:!0},{x:1530,y:710,isVacant:!0},{x:1565,y:710,isVacant:!0},{x:1600,y:710,isVacant:!0},{x:1435,y:747,isVacant:!0},{x:1470,y:747,isVacant:!0},{x:1505,y:747,isVacant:!0},{x:1540,y:747,isVacant:!0},{x:1320,y:785,isVacant:!0},{x:1355,y:785,isVacant:!0},{x:1390,y:785,isVacant:!0},{x:1425,y:785,isVacant:!0},{x:1460,y:785,isVacant:!0},{x:1495,y:785,isVacant:!0},{x:1530,y:785,isVacant:!0},{x:1565,y:785,isVacant:!0},{x:1600,y:785,isVacant:!0}],this.brownBlockInitialPos=[{x:300,y:125},{x:370,y:125},{x:440,y:125},{x:510,y:125},{x:580,y:125},{x:650,y:125},{x:720,y:125},{x:790,y:125},{x:860,y:125},{x:930,y:125},{x:997,y:125},{x:320,y:175},{x:390,y:175},{x:460,y:175},{x:530,y:175},{x:600,y:175},{x:670,y:175},{x:740,y:175},{x:810,y:175},{x:880,y:175},{x:950,y:175},{x:1015,y:175}],this.purpleBlockInitialPos=[{x:300,y:345},{x:370,y:345},{x:440,y:345},{x:510,y:345},{x:580,y:345},{x:650,y:345},{x:720,y:345},{x:790,y:345},{x:860,y:345},{x:930,y:345},{x:330,y:395},{x:400,y:395},{x:470,y:395},{x:540,y:395},{x:610,y:395},{x:680,y:395},{x:750,y:395},{x:820,y:395},{x:890,y:395},{x:960,y:395}],this.greenBlockInitialPos=[{x:319,y:570},{x:394,y:615},{x:469,y:570},{x:544,y:615},{x:619,y:570},{x:694,y:615},{x:769,y:570},{x:844,y:615},{x:919,y:570},{x:994,y:615}],this.yellowBlockInitialPos=[{x:319,y:790},{x:394,y:832},{x:469,y:790},{x:544,y:832},{x:619,y:790},{x:694,y:832},{x:769,y:790},{x:844,y:832},{x:919,y:790},{x:994,y:832}]}};class t extends Phaser.Scene{constructor(){super("PreloadScene"),this.fonts={"Roboto-Bold":null,"Roboto-Light":null,"Roboto-Medium":null,"Roboto-Regular":null,"RobotoCondensed-Regular":null,"Montserrat-Bold":null}}preload(){this.load.image("loaderBg","assets/images/01_Loader_bg.png"),this.load.image("progressBase","assets/images/01_Loader_blank.png"),this.load.image("progressBar","assets/images/01_Loader_fill.png"),this.load.image("truck","assets/images/01_Loader_truck.png"),this.load.image("truckSmock","assets/images/01_Loader_trucksmoke.png")}create(){this.loadingBase=this.add.image(960,540,"loaderBg"),this.loadingBase.setOrigin(.5,.5),this.loadingProgress=this.add.image(960,940,"progressBase"),this.loadingProgress.setOrigin(.5,.5),this.loadingProgressBar=this.add.image(80,940,"progressBar").setScale(0,.89),this.loadingProgressBar.setOrigin(0,.5),this.truck=this.add.image(160,910,"truck").setOrigin(.5),this.smoke=this.add.image(100,910,"truckSmock").setOrigin(.5),this.loadingText=this.add.text(215,900,"LOADING....",{fontFamily:"Roboto-Bold",fontSize:"45px",fill:"#F0E8E8",fontStyle:"bold",align:"center"}).setOrigin(.5),this.loadingPercentageText=this.add.text(1800,870,"0%",{fontFamily:"Roboto-Bold",fontSize:"40px",fill:"#F0E8E8",fontStyle:"bold",align:"center"}).setOrigin(.5),this.loadFonts()}loadFonts(){let e=Object.getOwnPropertyNames(this.fonts);e.forEach(((t,s)=>{let i=s>=e.length-1;this.fonts[t]=new FontFaceObserver(t),this.fonts[t].load().then(this.FontLoadSuccess.bind(this,t,i),this.FontLoadError.bind(this,t))}))}FontLoadSuccess(e,t){t&&this.loadAssets()}FontLoadError(e,t){}loadAssets(){this.load.on("progress",this.loadProgress,this),this.load.on("complete",this.OnComplete,{scene:this.scene}),this.load.image("piller","assets/images/piller.png"),this.load.image("userBg","assets/images/02_UserPage_bg.png"),this.load.image("startBtn","assets/images/02_UserPage_start_btn.png"),this.load.image("userArea","assets/images/02_UserPage_text_box.png"),this.load.image("gameBG","assets/images/03_game_area_bg.png"),this.load.image("Filler_1","assets/images/03_game_area_blank.png"),this.load.image("converter","assets/images/03_game_area_conveyer.png"),this.load.image("Filler_2","assets/images/03_game_area_fill.png"),this.load.image("truck","assets/images/03_game_area_truck.png"),this.load.image("popup","assets/images/popup/dick.png"),this.load.image("lose_truck","assets/images/Solution_and_Result_Assets/lose_truck.png"),this.load.image("Solution_bg","assets/images/Solution_and_Result_Assets/Solution_bg.png"),this.load.image("cross","assets/images/cross.png"),this.load.image("result_base","assets/images/Solution_and_Result_Assets/result_base.png"),this.load.image("result_bg","assets/images/Solution_and_Result_Assets/result_bg.png"),this.load.image("result_Lose","assets/images/Solution_and_Result_Assets/result_Lose.png"),this.load.image("result_replay_btn","assets/images/Solution_and_Result_Assets/result_replay_btn.png"),this.load.image("result_solution_btn","assets/images/Solution_and_Result_Assets/result_solution_btn.png"),this.load.image("result_win","assets/images/Solution_and_Result_Assets/result_win.png"),this.load.image("Solution_bg_bar","assets/images/Solution_and_Result_Assets/Solution_bg_bar.png"),this.load.image("Solution_text_base","assets/images/Solution_and_Result_Assets/Solution_text_base.png"),this.load.image("Solution_truck","assets/images/Solution_and_Result_Assets/Solution_truck.png"),this.load.image("win_truck","assets/images/Solution_and_Result_Assets/win_truck.png"),this.load.image("truck_nice","assets/images/UpdatedDesign/Truck.png"),this.load.image("Score_area","assets/images/UpdatedDesign/Score_area.png"),this.load.image("Score_btn","assets/images/UpdatedDesign/Score_btn.png"),this.load.image("Score_Card","assets/images/UpdatedDesign/Score_Card.png"),this.load.image("Top_Score_area","assets/images/UpdatedDesign/Top_Score_area.png"),this.load.image("gameBG","assets/images/gamePlayAssets/03_game_area_btn.png"),this.load.image("blueConveyer","assets/images/gamePlayAssets/03_game_area_conveyer.png"),this.load.image("yellowProgress","assets/images/gamePlayAssets/03_game_area_fill.png"),this.load.image("yellow","assets/images/gamePlayAssets/box_01.png"),this.load.image("green","assets/images/gamePlayAssets/box_02.png"),this.load.image("brown","assets/images/gamePlayAssets/box_03.png"),this.load.image("purple","assets/images/gamePlayAssets/box_04.png"),this.load.image("instruction_up","assets/images/instruction_up.png"),this.load.image("rulesBG","assets/images/instruction_ref.png"),this.load.image("next","assets/images/instruction_next_txt.png"),this.load.image("back","assets/images/instruction_back_txt.png"),this.load.image("conveyer_04","assets/images/gamePlayAssets/conveyer_04.png"),this.load.image("conveyer_02","assets/images/gamePlayAssets/conveyer_02.png"),this.load.image("conveyer_01","assets/images/gamePlayAssets/conveyer_01.png"),this.load.image("conveyer_03","assets/images/gamePlayAssets/conveyer_03.png"),this.load.image("shipPlay","assets/images/gamePlayAssets/Ship_btn.png"),this.load.image("container","assets/images/gamePlayAssets/03_game_area_truck.png"),this.load.start()}loadProgress(e){let t=Math.floor(100*e);this.loadingProgressBar.setScale(e,.89);let s=1800*t/100;this.truck.x=s,this.smoke.x=s-60,this.loadingPercentageText.setText(t+"%")}OnComplete(){e.game.scene.stop("PreloadScene"),e.game.scene.start("GameScene")}update(){}}class s{constructor(e){this.scene=e}CreateRules(e){if(!e)return void console.error("Player name is undefined!");this.rulesPopUpContainer=this.scene.add.container(960,540).setDepth(1);let t=this.scene.add.image(0,0,"rulesBG").setOrigin(.5),s=this.scene.add.image(0,-245,"instruction_up").setOrigin(.5).setScale(1,1.2).setVisible(!0),i=this.scene.add.text(0,-250,`Hey ${e} – Let's ship the fewest number of trucks with a capacity of 45,000 lb.`,{fontFamily:"Roboto-Regular",fontSize:"40px",fill:"#FFFFFF",fontStyle:"bold",align:"center",wordWrap:{width:800,useAdvancedWrap:!0}}).setOrigin(.5),a=this.scene.add.image(804,450,"next").setOrigin(.5).setInteractive({useHandCursor:!0});a.on("pointerdown",(()=>{})),a.on("pointerup",(()=>{this.DisablePopUP()}));let n=this.scene.add.image(-800,450,"back").setOrigin(.5).setInteractive({useHandCursor:!0});n.on("pointerup",(()=>{window.location.reload()})),this.rulesPopUpContainer.add([t,s,i,a,n])}DisablePopUP(){this.rulesPopUpContainer.setVisible(!1)}EnablePopUP(){this.rulesPopUpContainer.setVisible(!0)}}class i{constructor(e){this.scene=e}CreateUserInput(){this.UserInputContainer=this.scene.add.container(960,540).setDepth(1);const t=this.scene.add.image(0,0,"userBg").setOrigin(.5),s=this.scene.add.image(0,0,"userArea").setOrigin(.5),i=this.scene.add.text(-470,-18,"User Name",{fontFamily:"Roboto-Regular",fontSize:"30px",fill:"#F0E8E8",fontStyle:"bold",align:"center"}).setOrigin(.5),a=this.scene.add.text(-470,18,"(Max 25 Characters)",{fontFamily:"Roboto-Regular",fontSize:"15px",fill:"#F0E8E8",fontStyle:"bold",align:"center"}).setOrigin(.5);this.startBtn=this.scene.add.image(0,340,"startBtn").setOrigin(.5).setInteractive({useHandCursor:!0}),this.startBtn.on("pointerdown",(()=>{})),this.startBtn.on("pointerup",(()=>{this.OnStartPress()}),this),this.UserInputContainer.add([t,s,i,a,this.startBtn]),this.userName=this.scene.add.text(-190,0,"",{fontFamily:"Roboto-Regular",fontSize:"42px",fill:"#ffff00"}).setOrigin(0,.5),this.UserInputContainer.add([this.userName]),e.isMobile||this.UserDetails(),e.isMobile&&this.createInputField()}createInputField(){console.log("isMobile",e.isMobile),this.inputElement=document.createElement("input"),this.inputElement.type="text",this.inputElement.maxLength=25,this.inputElement.style.position="absolute",this.inputElement.style.left=window.innerWidth/2-150+"px",this.inputElement.style.top=window.innerHeight/2-30+"px",this.inputElement.style.width="300px",this.inputElement.style.height="60px",this.inputElement.style.fontSize="42px",this.inputElement.style.color="#ffff00",this.inputElement.style.background="transparent",this.inputElement.style.border="none",this.inputElement.style.outline="none",this.inputElement.style.textAlign="left",document.body.appendChild(this.inputElement),this.inputElement.addEventListener("input",(()=>{this.userName.text=this.inputElement.value})),this.inputElement.addEventListener("keydown",(e=>{e.key})),this.userName.visible=!1}UserDetails(){this.highPhen=this.scene.add.text(-190,0,"|",{fontFamily:"Roboto-Regular",fontSize:"45px",fill:"#ffff00"}).setOrigin(.5),this.AnimateHighPhen(),this.UserInputContainer.add(this.highPhen),this.scene.input.keyboard.on("keydown",(e=>{this.userName.text.length<25&&(32===e.keyCode||e.keyCode>=48&&e.keyCode<=90)&&(this.userName.text+=e.key,this.highPhen.x=this.userName.width-185),8===e.keyCode&&this.userName.text.length>0&&(this.userName.text=this.userName.text.slice(0,-1),this.highPhen.x=this.userName.width-185)}))}AnimateHighPhen(){this.scene.tweens.add({targets:this.highPhen,ease:"Linear",duration:200,alpha:0,repeat:-1,yoyo:!0})}OnStartPress(){const e=this.userName.text||this.inputElement.value;console.log("Player Name before passing to Rules:",e),e&&(console.log("Start button pressed"),this.ToggleUserTab(!1),this.inputElement&&(this.inputElement.style.display="none"),localStorage.setItem("playername",e),console.log("localStorage",localStorage.getItem("playername")),new s(this.scene).CreateRules(e))}ToggleUserTab(t){this.UserInputContainer.visible=t,this.inputElement&&(this.inputElement.style.display=t?"block":"none"),this.userName.visible=!e.isMobile&&t,this.highPhen&&(this.highPhen.visible=!e.isMobile&&t)}}let a=new class{constructor(){this.truckLoads=[0,0,0],this.maxLoad=45e3,this.currentScale=null,this.index=null,this.whenTwoTrucksActScale=null,this.whenTthreeTrucksActScale=null,this.truckIndex=null,this.currentLoad}moveWeightBetweenTrucks(e,t,s){this.truckLoads[e]-=s,this.truckLoads[t]+=s,this.updateTruckUI(e),this.updateTruckUI(t),this.HandleScaling(this.gameReff.gamePlayUi.barsArr[e].list[1],this.truckLoads[e],e),this.HandleScaling(this.gameReff.gamePlayUi.barsArr[t].list[1],this.truckLoads[t],t)}EachTruckWeightCalculation(t,s,i){if(this.gameReff=e.game.scene.scenes[1],this.currentLoad=i,"truck_1"===t)this.truckIndex=0;else if("truck_2"===t)this.truckIndex=1;else{if("truck_3"!==t)return;this.truckIndex=2}this.truckLoads[this.truckIndex]<=this.maxLoad-i&&(this.truckLoads[this.truckIndex]+=i,this.updateTruckUI(this.truckIndex),this.HandleScaling(this.gameReff.gamePlayUi.barsArr[this.truckIndex].list[1],this.truckLoads[this.truckIndex],this.truckIndex))}updateTruckUI(e){this.gameReff.gamePlayUi.barsArr[e].list[2].text=`${this.truckLoads[e]}/${this.maxLoad}`}HandleScaling(t,s,i){if(this.index=i,this.currentScale=s/this.maxLoad,e.scaleing[this.index].scaleX=this.currentScale,this.gameReff.gamePlayUi.isBool)for(let s=0;s<e.scaleing.length;s++)s!==this.index?e.scaleing[s].scaleX=e.scaleing[s].scaleX:t.scaleX=e.scaleing[s].scaleX;else{for(let t=0;t<e.scaleing.length;t++)e.scaleing[t].scaleX=parseFloat(7*e.scaleing[t].scaleX/10);t.scaleX=e.scaleing[this.index].scaleX,this.whenTthreeTrucksActScale=e.scaleing[this.index].scaleX}}UpdateScale(){for(let t=0;t<e.scaleing.length;t++)if(0!=e.scaleing[t].scaleX)for(let t=0;t<e.scaleing.length;t++)this.gameReff.gamePlayUi.barsArr[t].list[1].scaleX=7*e.scaleing[t].scaleX/10}ResetPositionAndScale(t,s){if(this.gameReff.gamePlayUi.isBool){0!=e.scaleing[s]&&(e.scaleing[s].scaleX=e.scaleing[s].scaleX-t.Id/this.maxLoad),0!=this.truckLoads[s]&&(this.truckLoads[s]=this.truckLoads[s]-t.Id);for(let e=0;e<this.truckLoads.length;e++)this.gameReff.gamePlayUi.barsArr[e].list[2].text=`${this.truckLoads[e]}/${this.maxLoad}`;for(let t=0;t<e.scaleing.length;t++)t!==s?e.scaleing[t].scaleX=e.scaleing[t].scaleX:this.gameReff.gamePlayUi.barsArr[t].list[1].scaleX=e.scaleing[t].scaleX}else{0!=this.truckLoads[s]&&(this.truckLoads[s]=this.truckLoads[s]-t.Id);for(let e=0;e<this.truckLoads.length;e++)this.gameReff.gamePlayUi.barsArr[e].list[2].text=`${this.truckLoads[e]}/${this.maxLoad}`;this.gameReff.gamePlayUi.barsArr[s].list[1].scaleX-=t.Id/this.maxLoad*7/10}}};class n{constructor(e){this.scene=e,this.truckArray=[],this.indicatorArr=[],this.barsArr=[],this.isBool=!0,this.indicatorTextArr=[],this.isThreeEnable=!1,this.result=null}CreateGameUI(){this.scene.add.image(960,540,"gameBG").setOrigin(.5),this.CreateLoads(),this.CreateTrucks(),this.CreateIndicators(),this.shipButton=this.scene.add.image(960,990,"shipPlay").setOrigin(.5).setTint(8421504).setInteractive(),this.shipButton.on("pointerdown",(()=>{})),this.shipButton.on("pointerup",(()=>{this.OnShipReleased()})),this.shipText=this.scene.add.text(960,990,"Ship",{fontFamily:"Roboto-Regular",fontSize:"40px",fill:"#FFFFFF",fontStyle:"bold",align:"center"}).setOrigin(.5)}CreateLoads(){for(let e=1;e<=4;e++)this.scene.add.image(520,220*e-70,"conveyer_0"+e).setOrigin(.5);const e={fontFamily:"Roboto-Regular",fontSize:"20px",fill:"#FFFFFF",fontStyle:"bold",align:"center"},t={fontFamily:"Roboto-Medium",fontSize:"25px",fill:"#FFFFFF",fontStyle:"bold",align:"center"};this.scene.add.text(150,134,"Must Ship",e).setOrigin(.5),this.scene.add.text(150,172,"2000 lb",t).setOrigin(.5),this.scene.add.text(150,355,"Must Ship",e).setOrigin(.5),this.scene.add.text(150,392,"2200 lb",t).setOrigin(.5),this.scene.add.text(150,572,"Filler",e).setOrigin(.5),this.scene.add.text(150,610,"2000 lb",t).setOrigin(.5),this.scene.add.text(150,794,"Filler",e).setOrigin(.5),this.scene.add.text(150,828,"2200 lb",t).setOrigin(.5)}CreateTrucks(){this.truckAreaContainer=this.scene.add.container(0,0);for(let t=0;t<e.truckPosition.length;t++){const{x:s,y:i,scale:a}=e.truckPosition[t];let n=this.scene.add.image(s,i,"container").setOrigin(.5).setScale(a);this.truckArray.push(n)}}CreateIndicators(){for(let t=0;t<e.barsPos.length;t++){const s=this.scene.add.container(0,0),i=this.scene.add.image(e.barsPos[t].x0,e.barsPos[t].y,"Filler_1").setOrigin(.5),a=this.scene.add.image(e.barsPos[t].x1,e.barsPos[t].y,"Filler_2").setOrigin(0,.5).setScale(0,1),n=this.scene.add.text(e.barsPos[t].x2,e.barsPos[t].y,"0/45000",{fontFamily:"Arial",fontSize:"25px",fill:"#543c14",align:"center"}).setOrigin(.5);this.indicatorTextArr.push(n);let r=t+1;n.Name="truck_"+r,s.add([i,a,n]),this.barsArr.push(s)}}OnAddTruck(){this.EnableThree(),this.SetPositionOffset(),this.isThreeEnable=!0,this.ResetTheOlderElems()}SetPositionOffset(){let t=22-this.scene.gamePlay.truckOneCapacity;if(0!=t)for(let s=0;s<t;s++)e.sTruckOne[s].isVacant=!1;let s=22-this.scene.gamePlay.truckTwoCapacity;if(0!=s)for(let t=0;t<s;t++)e.sTruckTwo[t].isVacant=!1}ResetTheOlderElems(){this.scene.gamePlay.firstMustGo.forEach(((e,t)=>{.5==e.scaleX&&.5==e.scaleY&&(e.setPosition(e.originalX,e.originalY),e.setScale(.6))})),this.scene.gamePlay.secondMustGo.forEach(((e,t)=>{.5==e.scaleX&&.5==e.scaleY&&(e.setPosition(e.originalX,e.originalY),e.setScale(.6))})),this.scene.gamePlay.firstFillers.forEach(((e,t)=>{.5==e.scaleX&&.5==e.scaleY&&(e.setPosition(e.originalX,e.originalY),e.setScale(.6))})),this.scene.gamePlay.secondFillers.forEach(((e,t)=>{.5==e.scaleX&&.5==e.scaleY&&(e.setPosition(e.originalX,e.originalY),e.setScale(.6))}))}EnableThree(){this.isBool=!1;for(let t=0;t<e.updatedPosition.length;t++){const{x:s,y:i,scale:a}=e.updatedPosition[t];this.truckArray[t].setPosition(s,i),this.truckArray[t].setScale(a)}let t=0;for(let s=0;s<this.barsArr.length;s++)this.barsArr[s].list[0].setPosition(e.updatedBarsPos[t].x0,e.updatedBarsPos[t].y),this.barsArr[s].list[1].setPosition(e.updatedBarsPos[t].x1,e.updatedBarsPos[t].y),this.barsArr[s].list[2].setPosition(e.updatedBarsPos[t].x2,e.updatedBarsPos[t].y),t++;let s=0;for(let t=0;t<3;t++)this.barsArr[t].list[0].setScale(e.scaleFactorArr[s].x1,e.scaleFactorArr[s].y),this.barsArr[t].list[1].setScale(e.scaleFactorArr[s].x2,e.scaleFactorArr[s].y),this.barsArr[t].list[2].setScale(e.scaleFactorArr[s].y,e.scaleFactorArr[s].y),s++;a.UpdateScale(),this.scene.gamePlay.CreateNewZones(),this.scene.gamePlay.ToggleZones(!0);for(let e=0;e<this.barsArr.length;e++)this.barsArr[e].list[1].x+=85;for(let t=0;t<this.scene.gamePlay.shipedToOne.length;t++)this.scene.gamePlay.shipedToOne[t].setScale(.3),this.scene.gamePlay.shipedToOne[t].setPosition(e.sTruckOne[t].x,e.sTruckOne[t].y),this.scene.gamePlay.shipedToOne[t].currentX=e.sTruckOne[t].x,this.scene.gamePlay.shipedToOne[t].currentY=e.sTruckOne[t].y;for(let t=0;t<this.scene.gamePlay.shipedToTwo.length;t++)this.scene.gamePlay.shipedToTwo[t].setScale(.3),this.scene.gamePlay.shipedToTwo[t].setPosition(e.sTruckTwo[t].x,e.sTruckTwo[t].y),this.scene.gamePlay.shipedToTwo[t].currentX=e.sTruckTwo[t].x,this.scene.gamePlay.shipedToTwo[t].currentY=e.sTruckTwo[t].y}OnShipReleased(){const e=0===this.scene.gamePlay.fMustCounter&&0===this.scene.gamePlay.sMustGoCounter;if(console.log(" this.scene.gamePlay.fMustCounter ",this.scene.gamePlay.fMustCounter,this.scene.gamePlay.sMustGoCounter),e){this.scene.popUp.DisableKuchNhi(),this.shipButton.setTint(16777215);const t=a.truckLoads;let s,i;s=t.slice(0,2).every((e=>45e3===e)),i=t.slice(0,2).some((e=>e<45e3)),i?(this.CalculateWastage(),this.scene.loasePage.EnableLosePage(!0)):s&&e&&(this.scene.winPage.EnableWinPage(!0),this.scene.popUp.DisableKuchNhi()),this.scene.loasePage.additionText.text="-45000 + "+a.truckLoads[0]+" - 45000 + "+a.truckLoads[1],this.result=-45e3+a.truckLoads[0]-45e3+a.truckLoads[1],this.scene.loasePage.balanceText.text=Math.abs(this.result).toString();let n=this.scene.userInput.userName.text,r=JSON.parse(localStorage.getItem("userData"))||[],o={name:n,result:this.result};r.push(o),localStorage.setItem("userData",JSON.stringify(r)),this.scene.scoreCardPanel.SetData(),this.ResetVacancy()}else this.scene.popUp.EnableKuchNhi()}ResetVacancy(){for(let t=0;t<e.bigTruckPosition1.length;t++)e.bigTruckPosition1[t].isVacant=!0,e.bigTruckPosition2[t].isVacant=!0,e.sTruckOne[t].isVacant=!0,e.sTruckTwo[t].isVacant=!0,e.sTruckThree[t].isVacant=!0}CalculateWastage(){}ResetGame(){e.scaleing=[{scaleX:0},{scaleX:0},{scaleX:0}],this.scene.gamePlay.truckOneCapacity=22,this.scene.gamePlay.truckTwoCapacity=22,this.scene.gamePlay.truckThreeCapacity=22,this.scene.gamePlay.fMustCounter=22,this.scene.gamePlay.sMustGoCounter=20,this.isBool=!0,this.shipButton.setTint(8421504);for(let e=0;e<this.indicatorTextArr.length;e++)this.indicatorTextArr[e].text="0/45000";for(let t=0;t<e.truckPosition.length;t++){const{x:s,y:i,scale:a}=e.truckPosition[t];this.truckArray[t].setPosition(s,i),this.truckArray[t].setScale(a)}let t=0;for(let s=0;s<this.barsArr.length;s++)this.barsArr[s].list[0].setPosition(e.barsPos[t].x0,e.barsPos[t].y),this.barsArr[s].list[1].setPosition(e.barsPos[t].x1,e.barsPos[t].y),this.barsArr[s].list[2].setPosition(e.barsPos[t].x2,e.barsPos[t].y),t++;let s=0;for(let t=0;t<3;t++)this.barsArr[t].list[0].setScale(e.updatedScaleFactorArr[s].x1,e.updatedScaleFactorArr[s].y),this.barsArr[t].list[1].setScale(e.updatedScaleFactorArr[s].x2,e.updatedScaleFactorArr[s].y),this.barsArr[t].list[2].setScale(e.updatedScaleFactorArr[s].y,e.updatedScaleFactorArr[s].y),s++;this.scene.gamePlay.firstMustGo.forEach(((t,s)=>{t.setPosition(e.brownBlockInitialPos[s].x,e.brownBlockInitialPos[s].y),t.state="onTape",t.petName="",t.setScale(.6),t.input.enabled=!0})),this.scene.gamePlay.secondMustGo.forEach(((t,s)=>{t.setPosition(e.purpleBlockInitialPos[s].x,e.purpleBlockInitialPos[s].y),t.setScale(.6),t.state="onTape",t.petName="",t.input.enabled=!0})),this.scene.gamePlay.firstFillers.forEach(((t,s)=>{t.setPosition(e.greenBlockInitialPos[s].x,e.greenBlockInitialPos[s].y),t.state="onTape",t.petName="",t.setScale(.6),t.input.enabled=!0})),this.scene.gamePlay.secondFillers.forEach(((t,s)=>{t.setPosition(e.yellowBlockInitialPos[s].x,e.yellowBlockInitialPos[s].y),t.setScale(.6),t.state="onTape",t.petName="",t.input.enabled=!0})),this.scene.gamePlay.zoneArr.forEach((e=>{e.input.enabled=!0})),this.scene.gamePlay.newzoneArr.forEach((e=>{e.input.enabled=!1})),this.isThreeEnable=!1,this.scene.gamePlay.bigTruckOneCounter=0,this.scene.gamePlay.bigTruckTwoCounter=0,this.scene.gamePlay.bigTruckThreeCounter=0,this.scene.gamePlay.shipedToOne=[],this.scene.gamePlay.shipedToTwo=[],this.scene.gamePlay.shipedToThree=[],a.truckLoads=[0,0,0],a.currentScale=null,a.index=null}}class r{constructor(e){this.shipedToOne=[],this.shipedToTwo=[],this.shipedToThree=[],this.scene=e,this.truckOneCapacity=22,this.truckTwoCapacity=22,this.truckThreeCapacity=22,this.firstMustGo=[],this.secondMustGo=[],this.firstFillers=[],this.secondFillers=[],this.zoneArr=[],this.newzoneArr=[],this.fMustCounter=22,this.sMustGoCounter=20,this.bigTruckOneCounter=0,this.bigTruckTwoCounter=0,this.bigTruckThreeCounter=0,this.balerContainer=null,this.selectedEmem=[],this.temp="",this.temp1=""}createDraggableImage(e,t,s,i,a,n=.6){let r=this.scene.add.image(e,t,s).setOrigin(.5).setScale(n).setInteractive({useHandCursor:!0});return this.balerContainer.add(r),r.Name=i,r.Id=a,this.scene.input.setDraggable(r),r}CreateDraggableElements(){let e,t,s,i,a,n;this.balerContainer=this.scene.add.container(0,0).setDepth(1);for(let s=0;s<22;s++){s<11?(e=300,t=125):(e=-450,t=175);let i=this.createDraggableImage(e+70*s,t,"brown","brown",2e3);i.originalX=e+70*s,i.originalY=t,i.state="onTape",i.petName="",this.firstMustGo.push(i)}for(let e=0;e<20;e++){e<10?(s=300,i=345):(s=-370,i=395);let t=this.createDraggableImage(s+70*e,i,"purple","purple",2200);t.originalX=s+70*e,t.originalY=i,t.state="onTape",t.petName="",this.secondMustGo.push(t)}for(let e=0;e<10;e++){a=e%2==0?570:615;let t=this.createDraggableImage(319+75*e,a,"green","green",2e3);t.originalX=319+75*e,t.originalY=a,t.state="onTape",t.petName="",this.firstFillers.push(t)}for(let e=0;e<10;e++){n=e%2==0?790:832;let t=this.createDraggableImage(319+75*e,n,"yellow","yellow",2200);t.originalX=319+75*e,t.originalY=n,t.state="onTape",t.petName="",this.secondFillers.push(t)}this.applyDraggability()}applyDraggability(){let t;for(let s=0;s<2;s++){t=this.scene.add.zone(1440,e.zonePos[s].y,500,200).setRectangleDropZone(500,200);let i=s+1;t.Name="truck_"+i,this.zoneArr.push(t)}this.scene.input.on("dragstart",((e,t)=>{this.scene.children.bringToTop(t),t.originalZone=this.getZoneName(t.x,t.y)})),this.scene.input.on("drag",((e,t,s,i)=>{t.x=s,t.y=i})),this.scene.input.on("drop",((t,s,i)=>{if(this.scene.gamePlayUi.isThreeEnable)if(s.scale=.3,"truck_1"==i.Name&&this.truckOneCapacity>0&&45e3-a.truckLoads[0]>=s.Id&&"truck_1"!==s.originalZone&&"truck_2"!==s.originalZone&&"truck_3"!==s.originalZone){s.index=0,s.originalZone=i.Name,s.state="onTruck",this.truckOneCapacity-=1,this.shipedToOne.push(s),this.bigTruckOneCounter+=1;for(let t=0;t<e.sTruckOne.length;t++)if(e.sTruckOne[t].isVacant){s.x=e.sTruckOne[t].x,s.y=e.sTruckOne[t].y,s.currentX=e.sTruckOne[t].x,s.currentY=e.sTruckOne[t].y,e.sTruckOne[t].isVacant=!1;break}a.EachTruckWeightCalculation(i.Name,s.Name,s.Id)}else if("truck_2"==i.Name&&this.truckTwoCapacity>0&&45e3-a.truckLoads[1]>=s.Id&&"truck_1"!==s.originalZone&&"truck_2"!==s.originalZone&&"truck_3"!==s.originalZone){s.index=1,s.originalZone=i.Name,this.truckTwoCapacity-=1,s.state="onTruck",this.shipedToTwo.push(s),this.bigTruckTwoCounter+=1;for(let t=0;t<e.sTruckTwo.length;t++)if(e.sTruckTwo[t].isVacant){s.x=e.sTruckTwo[t].x,s.y=e.sTruckTwo[t].y,s.currentX=e.sTruckTwo[t].x,s.currentY=e.sTruckTwo[t].y,e.sTruckTwo[t].isVacant=!1;break}a.EachTruckWeightCalculation(i.Name,s.Name,s.Id)}else if("truck_3"==i.Name&&this.truckThreeCapacity>0&&45e3-a.truckLoads[2]>=s.Id&&"truck_1"!==s.originalZone&&"truck_2"!==s.originalZone&&"truck_3"!==s.originalZone){s.index=2,s.originalZone=i.Name,s.state="onTruck",this.truckThreeCapacity-=1,this.shipedToThree.push(s),this.bigTruckThreeCounter+=1;for(let t=0;t<e.sTruckThree.length;t++)if(e.sTruckThree[t].isVacant){s.x=e.sTruckThree[t].x,s.y=e.sTruckThree[t].y,s.currentX=e.sTruckThree[t].x,s.currentY=e.sTruckThree[t].y,e.sTruckThree[t].isVacant=!1;break}a.EachTruckWeightCalculation(i.Name,s.Name,s.Id)}else s.x=s.input.dragStartX,s.y=s.input.dragStartY,s.petName="repeater",s.setScale(.5),setTimeout((()=>{s.input.enabled=!0}),1e3);else if(s.scale=.5,"truck_1"==i.Name&&this.truckOneCapacity>0&&45e3-a.truckLoads[0]>=s.Id&&"truck_1"!==s.originalZone&&"truck_2"!==s.originalZone){s.index=0,s.originalZone=i.Name,s.state="onTruck",this.shipedToOne.push(s),this.truckOneCapacity-=1,this.bigTruckOneCounter+=1;for(let t=0;t<e.bigTruckPosition1.length;t++)if(e.bigTruckPosition1[t].isVacant){s.x=e.bigTruckPosition1[t].x,s.y=e.bigTruckPosition1[t].y,s.currentX=e.bigTruckPosition1[t].x,s.currentY=e.bigTruckPosition1[t].y,e.bigTruckPosition1[t].isVacant=!1;break}a.EachTruckWeightCalculation(i.Name,s.Name,s.Id)}else if("truck_2"==i.Name&&this.truckTwoCapacity>0&&45e3-a.truckLoads[1]>=s.Id&&"truck_2"!==s.originalZone&&"truck_1"!==s.originalZone){s.index=1,s.originalZone=i.Name,this.shipedToTwo.push(s),this.truckTwoCapacity-=1,this.bigTruckTwoCounter+=1,s.state="onTruck";for(let t=0;t<e.bigTruckPosition2.length;t++)if(e.bigTruckPosition2[t].isVacant){s.x=e.bigTruckPosition2[t].x,s.y=e.bigTruckPosition2[t].y,s.currentX=e.bigTruckPosition2[t].x,s.currentY=e.bigTruckPosition2[t].y,e.bigTruckPosition2[t].isVacant=!1;break}a.EachTruckWeightCalculation(i.Name,s.Name,s.Id)}else{s.x=s.input.dragStartX,s.y=s.input.dragStartY,s.setScale(.5),s.petName="repeater",setTimeout((()=>{s.input.enabled=!0}),1e3);const e=document.createElement("div");e.style.border="4px solid #e1ad01",e.style.borderRadius="15px",e.style.width="450px",e.style.height="65px",e.style.backgroundColor="black",e.style.position="absolute",e.style.left=window.innerWidth/2-150+"px",e.style.top=window.innerHeight/2-30+"px",e.style.display="flex",e.style.justifyContent="center",e.style.alignContent="center",e.style.alignItems="center",e.innerHTML="Weight limit exceeded...",e.style.fontSize="30px",e.style.color="#e1ad01",e.style.textAlign="center",e.style.fontFamily="Roboto-Regular",document.body.appendChild(e),setTimeout((()=>{e.remove()}),2e3)}"repeater"!=s.petName&&("brown"==s.Name?this.fMustCounter-=1:"purple"==s.Name&&(this.sMustGoCounter-=1))})),this.scene.input.on("dragend",((e,t,s)=>{s?t.input.enabled=!0:this.scene.tweens.add({targets:t,duration:100,ease:"Quartic.Out",x:t.originalX,y:t.originalY,onComplete:()=>{t.setScale(.6),t.input.enabled=!0,t.petName="",null!=t.index&&(t.setScale(.6),"onTruck"==t.state&&"repeater"!=t.petName&&(this.ResetAfterDraggOut(t),a.ResetPositionAndScale(t,t.index),t.state="onTape"))}})}))}ResetAfterDraggOut(t){if(0==t.index){if(this.truckOneCapacity+=1,this.bigTruckOneCounter-=1,this.scene.gamePlayUi.isThreeEnable)for(let s=0;s<e.sTruckOne.length;s++)e.sTruckOne[s].x==t.currentX&&e.sTruckOne[s].y==t.currentY&&(e.sTruckOne[s].isVacant=!0);else for(let s=0;s<e.bigTruckPosition1.length;s++)e.bigTruckPosition1[s].x==t.currentX&&e.bigTruckPosition1[s].y==t.currentY&&(e.bigTruckPosition1[s].isVacant=!0);this.EliminateFromArray(t.Name,this.shipedToOne)}else if(1==t.index){if(this.truckTwoCapacity+=1,this.bigTruckTwoCounter-=1,this.scene.gamePlayUi.isThreeEnable)for(let s=0;s<e.sTruckTwo.length;s++)e.sTruckTwo[s].x==t.currentX&&e.sTruckTwo[s].y==t.currentY&&(e.sTruckTwo[s].isVacant=!0);else for(let s=0;s<e.bigTruckPosition2.length;s++)e.bigTruckPosition2[s].x==t.currentX&&e.bigTruckPosition2[s].y==t.currentY&&(e.bigTruckPosition2[s].isVacant=!0);this.EliminateFromArray(t.Name,this.shipedToTwo)}else if(2==t.index){this.truckThreeCapacity+=1,this.bigTruckThreeCounter-=1;for(let s=0;s<e.sTruckThree.length;s++)e.sTruckThree[s].x==t.currentX&&e.sTruckThree[s].y==t.currentY&&(e.sTruckThree[s].isVacant=!0);this.EliminateFromArray(t.Name,this.shipedToThree)}"brown"==t.Name?this.fMustCounter+=1:"purple"==t.Name&&(this.sMustGoCounter+=1)}EliminateFromArray(e,t){for(let s=0;s<t.length;s++)if(t[s].Name===e){t.splice(s,1);break}}getZoneName(e,t){for(let s=0;s<this.zoneArr.length;s++){let i=this.zoneArr[s];if(e>=i.x-i.width/2&&e<=i.x+i.width/2&&t>=i.y-i.height/2&&t<=i.y+i.height/2)return i.Name}return null}getRandomIntInclusive(e,t){const s=Math.ceil(e),i=Math.floor(t);return Math.floor(Math.random()*(i-s+1)+s)}CreateNewZones(){let t;for(let s=0;s<e.updatedZonePos.length;s++){t=this.scene.add.zone(1465,e.updatedZonePos[s].y,300,150).setRectangleDropZone(300,150),this.newzoneArr.push(t);let i=s+1;t.Name="truck_"+i}}ToggleZones(e){e?(this.newzoneArr.forEach((e=>{e.input.enabled=!0})),this.zoneArr.forEach((e=>{e.input.enabled=!1}))):(this.zoneArr.forEach((e=>{e.input.enabled=!0})),this.newzoneArr.forEach((e=>{e.input.enabled=!1})))}}class o{constructor(e){this.scene=e}CreateWinPage(){this.winPageCOntainer=this.scene.add.container(960,540).setDepth(4);let e=this.scene.add.image(0,0,"result_bg").setOrigin(.5),t=this.scene.add.image(0,-70,"result_win").setOrigin(.5);this.replayBtn=this.scene.add.image(-160,160,"result_replay_btn").setOrigin(.5),this.replayBtn.setInteractive({useHandCursor:!0}),this.replayBtn.on("pointerdown",(()=>{})),this.replayBtn.on("pointerup",(()=>{this.OnReplayReleased()})),this.topScoreBtn1=this.scene.add.image(160,160,"Score_btn").setOrigin(.5).setInteractive({useHandCursor:!0});const s=this.scene.add.text(190,160,"Top Score",{fontFamily:"Roboto-Regular",fontSize:"35px",fill:"#fefefe",fontStyle:"bold",align:"center"}).setOrigin(.5);this.winPageCOntainer.add([e,t,this.replayBtn,this.topScoreBtn1,s]),this.topScoreBtn1.on("pointerdown",(()=>{})),this.topScoreBtn1.on("pointerup",(()=>{this.winPageCOntainer.visible=!1,this.scene.scoreCardPanel.scoreCardContainer.setVisible(!0)})),this.winPageCOntainer.visible=!1}OnReplayReleased(){this.DisableWinPage(),this.scene.gamePlayUi.ResetGame()}EnableWinPage(){this.winPageCOntainer.visible=!0}DisableWinPage(){this.winPageCOntainer.visible=!1}}class l{constructor(e){this.scene=e}CreateLosePage(){this.losePageContainer=this.scene.add.container(960,540).setDepth(2);let e=this.scene.add.image(0,0,"result_bg").setOrigin(.5),t=this.scene.add.image(0,-70,"result_base").setOrigin(.5),s=this.scene.add.image(0,-250,"truck_nice").setOrigin(.5),i=this.scene.add.image(0,10,"Score_area").setOrigin(.5);this.additionText=this.scene.add.text(0,-20,"100+200+300 =",{fontFamily:"Roboto-Regular",fontSize:"28px",fill:"#b0b0a2",fontStyle:"bold",align:"center"}).setOrigin(.5),this.balanceText=this.scene.add.text(0,65,"600",{fontFamily:"Roboto-Regular",fontSize:"45px",fill:"#fefefe",fontStyle:"bold",align:"center"}).setOrigin(.5),this.solutionBtn=this.scene.add.image(-160,160,"result_solution_btn").setOrigin(.5).setInteractive({useHandCursor:!0}),this.replayBtn=this.scene.add.image(0,290,"result_replay_btn").setOrigin(.5).setInteractive({useHandCursor:!0}),this.solutionBtn.on("pointerdown",(()=>{})),this.solutionBtn.on("pointerup",(()=>{this.OnSolutionBtnUp()})),this.replayBtn.on("pointerdown",(()=>{})),this.replayBtn.on("pointerup",(()=>{this.OnReplayBtnUp()})),this.topScoreBtn=this.scene.add.image(160,160,"Score_btn").setOrigin(.5).setInteractive({useHandCursor:!0});const a=this.scene.add.text(190,160,"Top Score",{fontFamily:"Roboto-Regular",fontSize:"35px",fill:"#fefefe",fontStyle:"bold",align:"center"}).setOrigin(.5);this.topScoreBtn.on("pointerdown",(()=>{})),this.topScoreBtn.on("pointerup",(()=>{this.EnableScorePanel()})),this.losePageContainer.add([e,t,s,i,this.additionText,this.balanceText,this.solutionBtn,this.topScoreBtn,a,this.replayBtn]),this.losePageContainer.setVisible(!1)}OnSolutionBtnUp(){this.scene.solutionPage.EnableSolutionPage()}OnReplayBtnUp(){this.DisableLosePage(),this.scene.gamePlayUi.ResetGame()}EnableLosePage(){this.losePageContainer.setVisible(!0)}DisableLosePage(){this.losePageContainer.setVisible(!1)}EnableScorePanel(){this.scene.scoreCardPanel.EnableScoreCard()}}class c{constructor(e){this.scene=e}CreateSolutionPage(){this.SolutionPageContainer=this.scene.add.container(960,540).setDepth(2);const e=this.scene.add.image(0,0,"Solution_bg").setOrigin(.5);this.close=this.scene.add.image(880,-470,"cross").setOrigin(.5).setInteractive({useHandCursor:!0}),this.close.on("pointerdown",(()=>{})),this.close.on("pointerup",(()=>{this.DisableSolutionPage()}));let t=this.scene.add.image(0,-500,"Solution_text_base").setOrigin(.5).setAlpha(.7).setScale(.5),s=this.scene.add.text(0,-500,"Solution",{fontFamily:"Roboto-Bold",fontSize:"40px",fill:"#FFFFFF",align:"center"}).setOrigin(.5),i=this.scene.add.image(-465,-10,"Solution_truck").setOrigin(.5),a=this.scene.add.image(-465,270,"Solution_text_base");const n={fontFamily:"Roboto-Regular",fontSize:"40px",fill:"#FFFFFF",fontStyle:"bold",align:"center"},r={fontFamily:"Roboto-Regular",fontSize:"40px",fill:"#ffcc00",fontStyle:"bold",align:"center"};let o=this.scene.add.text(-465,210,"15 pallets at 2200 lbs",n).setOrigin(.5),l=this.scene.add.text(-475,260,"6 pallets at 2000 lbs",n).setOrigin(.5),c=this.scene.add.text(-530,330,"Waste = 0 lbs",r).setOrigin(.5),h=this.scene.add.image(465,270,"Solution_text_base"),d=this.scene.add.text(450,210,"5 pallets at 2200 lbs",n).setOrigin(.5),u=this.scene.add.text(460,260,"17 pallets at 2000 lbs",n).setOrigin(.5),g=this.scene.add.text(404,330,"Waste = 0 lbs",r).setOrigin(.5),p=this.scene.add.image(465,-10,"Solution_truck").setOrigin(.5);this.SolutionPageContainer.add([e,t,s,i,p,a,h,o,l,c,d,u,g,this.close]),this.SolutionPageContainer.setVisible(!1)}EnableSolutionPage(){this.SolutionPageContainer.setVisible(!0)}DisableSolutionPage(){this.SolutionPageContainer.setVisible(!1)}}class h{constructor(e){this.scene=e,this.nameArray=[],this.scoreArray=[]}CreateScoreCard(){this.scoreCardContainer=this.scene.add.container(0,0).setDepth(3);const e=this.scene.add.image(960,540,"result_bg");this.close=this.scene.add.image(1840,70,"cross").setOrigin(.5).setInteractive({useHandCursor:!0}),this.close.on("pointerdown",(()=>{})),this.close.on("pointerup",(()=>{this.DisableScoreCard(),this.scene.winPage.EnableWinPage()}));const t=this.scene.add.image(960,118,"Top_Score_area").setOrigin(.5),s=this.scene.add.text(960,110,"Top Score",{fontFamily:"Roboto-Regular",fontSize:"35px",fill:"#ffffff",fontStyle:"bold",align:"center"}).setOrigin(.5),i=this.scene.add.image(960,614,"Score_Card").setOrigin(.5),a={fontFamily:"Roboto-Medium",fontSize:"25px",fill:"#998553",fontStyle:"bold",align:"center"},n=this.scene.add.text(846,251,"Contestant",a).setOrigin(.5),r=this.scene.add.text(1073,251,"Score",a).setOrigin(.5);this.scoreCardContainer.add([e,t,i,s,n,r,this.close]),this.CraeteScoreText()}CraeteScoreText(){let e=0;for(;e<10;){let t=this.scene.add.text(750,325+72.5*e,"Supriyo",{fontFamily:"Roboto-Regular",fontSize:"20px",fill:"#ffffff",fontStyle:"bold",align:"center"}).setOrigin(0,.5).setVisible(!1);this.scoreCardContainer.add(t),this.nameArray.push(t);let s=this.scene.add.text(1064,325+72.5*e,"140",{fontFamily:"Roboto-Light",fontSize:"30px",fill:"#ffffff",align:"center"}).setOrigin(.5).setVisible(!1);this.scoreCardContainer.add(s),this.scoreArray.push(s),e++}this.scoreCardContainer.setVisible(!1)}EnableScoreCard(){this.scoreCardContainer.setVisible(!0)}DisableScoreCard(){this.scoreCardContainer.setVisible(!1)}SetData(){let e=JSON.parse(localStorage.getItem("userData"));if(e){e.reverse(),console.log("Player's score: ",e),this.nameArray.forEach((e=>e.setVisible(!1))),this.scoreArray.forEach((e=>e.setVisible(!1)));for(let t=0;t<e.length&&t<10;t++)this.nameArray[t].setVisible(!0),this.scoreArray[t].setVisible(!0),this.nameArray[t].setText(e[t].name),this.scoreArray[t].setText(Math.abs(e[t].result)),console.log("userArray[i].result",e[t].result)}}}class d{constructor(e){this.scene=e}CreatePopUp(){this.kuchNhi=this.scene.add.image(1510,990,"popup").setOrigin(.5).setVisible(!1).setDepth(2)}EnableKuchNhi(){this.kuchNhi.setVisible(!0),setTimeout((()=>{this.kuchNhi.setVisible(!1)}),1e3)}DisableKuchNhi(){this.kuchNhi.setVisible(!1)}}class u extends Phaser.Scene{constructor(){super("GameScene"),this.userInput=null,this.gamePlayUi=null,this.gamePlay=null,this.winPage=null,this.loasePage=null,this.solutionPage=null,this.rules=null,this.scoreCardPanel=null,this.popUp=null}init(){this.userInput=new i(this),this.gamePlayUi=new n(this),this.gamePlay=new r(this),this.winPage=new o(this),this.loasePage=new l(this),this.solutionPage=new c(this),this.rules=new s(this),this.scoreCardPanel=new h(this),this.popUp=new d(this)}preload(){}create(){this.input.on("pointerdown",(e=>{})),this.gamePlayUi.CreateGameUI(),this.gamePlay.CreateDraggableElements(),this.rules.CreateRules(),this.userInput.CreateUserInput(),this.winPage.CreateWinPage(),this.popUp.CreatePopUp(),this.loasePage.CreateLosePage(),this.solutionPage.CreateSolutionPage(),this.scoreCardPanel.CreateScoreCard()}}let g=new t,p=new u;window.onload=function(){let t;e.isMobile=/iPhone|iPhoneX|iPod|BlackBerry|kindle|playbook|Windows Phone|Android/i.test(navigator.userAgent),t=e.isMobile?{type:Phaser.WEBGL,backgroundColor:2236962,dom:{createContainer:!0},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},plugins:{},physics:{default:"arcade",arcade:{gravity:{y:0}}},width:1920,height:1080}:{type:Phaser.AUTO,backgroundColor:2236962,scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},plugins:{},physics:{default:"arcade",arcade:{gravity:{y:100}}},width:1920,height:1080,dom:{createContainer:!0}},e.game=new Phaser.Game(t),e.scaleFactor=t.height/1920,e.scaleFactorX=t.width/1080,e.scaleFactorY=t.height/1920,e.currentAspectRatio=t.height/t.width,e.game.scene.add("PreloadScene",g),e.game.scene.add("GameScene",p),e.game.scene.start("PreloadScene")}}},i={};function a(e){var t=i[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var n=i[e]={exports:{}};try{var r={id:e,module:n,factory:s[e],require:a};a.i.forEach((function(e){e(r)})),n=r.module,r.factory.call(n.exports,n,n.exports,r.require)}catch(e){throw n.error=e,e}return n.exports}a.m=s,a.c=i,a.i=[],a.hu=e=>e+"."+a.h()+".hot-update.js",a.miniCssF=e=>{},a.hmrF=()=>"main."+a.h()+".hot-update.json",a.h=()=>"26638f7e9d6f20c364b8",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="webpack:",a.l=(s,i,n,r)=>{if(e[s])e[s].push(i);else{var o,l;if(void 0!==n)for(var c=document.getElementsByTagName("script"),h=0;h<c.length;h++){var d=c[h];if(d.getAttribute("src")==s||d.getAttribute("data-webpack")==t+n){o=d;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+n),o.src=s),e[s]=[i];var u=(t,i)=>{o.onerror=o.onload=null,clearTimeout(g);var a=e[s];if(delete e[s],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(i))),t)return t(i)},g=setTimeout(u.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=u.bind(null,o.onerror),o.onload=u.bind(null,o.onload),l&&document.head.appendChild(o)}},(()=>{var e,t,s,i={},n=a.c,r=[],o=[],l="idle",c=0,h=[];function d(e){l=e;for(var t=[],s=0;s<o.length;s++)t[s]=o[s].call(null,e);return Promise.all(t).then((function(){}))}function u(){0==--c&&d("ready").then((function(){if(0===c){var e=h;h=[];for(var t=0;t<e.length;t++)e[t]()}}))}function g(e){if("idle"!==l)throw new Error("check() is only allowed in idle status");return d("check").then(a.hmrM).then((function(s){return s?d("prepare").then((function(){var i=[];return t=[],Promise.all(Object.keys(a.hmrC).reduce((function(e,n){return a.hmrC[n](s.c,s.r,s.m,e,t,i),e}),[])).then((function(){return t=function(){return e?y(e):d("ready").then((function(){return i}))},0===c?t():new Promise((function(e){h.push((function(){e(t())}))}));var t}))})):d(m()?"ready":"idle").then((function(){return null}))}))}function p(e){return"ready"!==l?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+l+")")})):y(e)}function y(e){e=e||{},m();var i=t.map((function(t){return t(e)}));t=void 0;var a=i.map((function(e){return e.error})).filter(Boolean);if(a.length>0)return d("abort").then((function(){throw a[0]}));var n=d("dispose");i.forEach((function(e){e.dispose&&e.dispose()}));var r,o=d("apply"),l=function(e){r||(r=e)},c=[];return i.forEach((function(e){if(e.apply){var t=e.apply(l);if(t)for(var s=0;s<t.length;s++)c.push(t[s])}})),Promise.all([n,o]).then((function(){return r?d("fail").then((function(){throw r})):s?y(e).then((function(e){return c.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):d("idle").then((function(){return c}))}))}function m(){if(s)return t||(t=[]),Object.keys(a.hmrI).forEach((function(e){s.forEach((function(s){a.hmrI[e](s,t)}))})),s=void 0,!0}a.hmrD=i,a.i.push((function(h){var y,m,f,x,b=h.module,k=function(t,s){var i=n[s];if(!i)return t;var a=function(a){if(i.hot.active){if(n[a]){var o=n[a].parents;-1===o.indexOf(s)&&o.push(s)}else r=[s],e=a;-1===i.children.indexOf(a)&&i.children.push(a)}else console.warn("[HMR] unexpected require("+a+") from disposed module "+s),r=[];return t(a)},o=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(s){t[e]=s}}};for(var h in t)Object.prototype.hasOwnProperty.call(t,h)&&"e"!==h&&Object.defineProperty(a,h,o(h));return a.e=function(e,s){return function(e){switch(l){case"ready":d("prepare");case"prepare":return c++,e.then(u,u),e;default:return e}}(t.e(e,s))},a}(h.require,h.id);b.hot=(y=h.id,m=b,x={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:f=e!==y,_requireSelf:function(){r=m.parents.slice(),e=f?void 0:y,a(y)},active:!0,accept:function(e,t,s){if(void 0===e)x._selfAccepted=!0;else if("function"==typeof e)x._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var i=0;i<e.length;i++)x._acceptedDependencies[e[i]]=t||function(){},x._acceptedErrorHandlers[e[i]]=s;else x._acceptedDependencies[e]=t||function(){},x._acceptedErrorHandlers[e]=s},decline:function(e){if(void 0===e)x._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)x._declinedDependencies[e[t]]=!0;else x._declinedDependencies[e]=!0},dispose:function(e){x._disposeHandlers.push(e)},addDisposeHandler:function(e){x._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=x._disposeHandlers.indexOf(e);t>=0&&x._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,l){case"idle":t=[],Object.keys(a.hmrI).forEach((function(e){a.hmrI[e](y,t)})),d("ready");break;case"ready":Object.keys(a.hmrI).forEach((function(e){a.hmrI[e](y,t)}));break;case"prepare":case"check":case"dispose":case"apply":(s=s||[]).push(y)}},check:g,apply:p,status:function(e){if(!e)return l;o.push(e)},addStatusHandler:function(e){o.push(e)},removeStatusHandler:function(e){var t=o.indexOf(e);t>=0&&o.splice(t,1)},data:i[y]},e=void 0,x),b.parents=r,b.children=[],r=[],h.require=k})),a.hmrC={},a.hmrI={}})(),(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");if(s.length)for(var i=s.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=s[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{if("undefined"!=typeof document){var e=[],t=[],s=s=>({dispose:()=>{for(var t=0;t<e.length;t++){var s=e[t];s.parentNode&&s.parentNode.removeChild(s)}e.length=0},apply:()=>{for(var e=0;e<t.length;e++)t[e].rel="stylesheet";t.length=0}});a.hmrC.miniCss=(i,n,r,o,l,c)=>{l.push(s),i.forEach((s=>{var i=a.miniCssF(s),n=a.p+i,r=((e,t)=>{for(var s=document.getElementsByTagName("link"),i=0;i<s.length;i++){var a=(r=s[i]).getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(a===e||a===t))return r}var n=document.getElementsByTagName("style");for(i=0;i<n.length;i++){var r;if((a=(r=n[i]).getAttribute("data-href"))===e||a===t)return r}})(i,n);r&&o.push(new Promise(((i,o)=>{var l=((e,t,s,i,n)=>{var r=document.createElement("link");return r.rel="stylesheet",r.type="text/css",a.nc&&(r.nonce=a.nc),r.onerror=r.onload=s=>{if(r.onerror=r.onload=null,"load"===s.type)i();else{var a=s&&s.type,o=s&&s.target&&s.target.href||t,l=new Error("Loading CSS chunk "+e+" failed.\n("+a+": "+o+")");l.name="ChunkLoadError",l.code="CSS_CHUNK_LOAD_FAILED",l.type=a,l.request=o,r.parentNode&&r.parentNode.removeChild(r),n(l)}},r.href=t,s?s.parentNode.insertBefore(r,s.nextSibling):document.head.appendChild(r),r})(s,n,r,(()=>{l.as="style",l.rel="preload",i()}),o);e.push(r),t.push(l)})))}))}}})(),(()=>{var e,t,s,i,n,r=a.hmrS_jsonp=a.hmrS_jsonp||{792:0},o={};function l(t,s){return e=s,new Promise(((e,s)=>{o[t]=e;var i=a.p+a.hu(t),n=new Error;a.l(i,(e=>{if(o[t]){o[t]=void 0;var i=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;n.message="Loading hot update chunk "+t+" failed.\n("+i+": "+a+")",n.name="ChunkLoadError",n.type=i,n.request=a,s(n)}}))}))}function c(e){function o(e){for(var t=[e],s={},i=t.map((function(e){return{chain:[e],id:e}}));i.length>0;){var n=i.pop(),r=n.id,o=n.chain,c=a.c[r];if(c&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:o,moduleId:r};if(c.hot._main)return{type:"unaccepted",chain:o,moduleId:r};for(var h=0;h<c.parents.length;h++){var d=c.parents[h],u=a.c[d];if(u){if(u.hot._declinedDependencies[r])return{type:"declined",chain:o.concat([d]),moduleId:r,parentId:d};-1===t.indexOf(d)&&(u.hot._acceptedDependencies[r]?(s[d]||(s[d]=[]),l(s[d],[r])):(delete s[d],t.push(d),i.push({chain:o.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:s}}function l(e,t){for(var s=0;s<t.length;s++){var i=t[s];-1===e.indexOf(i)&&e.push(i)}}a.f&&delete a.f.jsonpHmr,t=void 0;var c={},h=[],d={},u=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var g in s)if(a.o(s,g)){var p=s[g],y=p?o(g):{type:"disposed",moduleId:g},m=!1,f=!1,x=!1,b="";switch(y.chain&&(b="\nUpdate propagation: "+y.chain.join(" -> ")),y.type){case"self-declined":e.onDeclined&&e.onDeclined(y),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+y.moduleId+b));break;case"declined":e.onDeclined&&e.onDeclined(y),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+y.moduleId+" in "+y.parentId+b));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(y),e.ignoreUnaccepted||(m=new Error("Aborted because "+g+" is not accepted"+b));break;case"accepted":e.onAccepted&&e.onAccepted(y),f=!0;break;case"disposed":e.onDisposed&&e.onDisposed(y),x=!0;break;default:throw new Error("Unexception type "+y.type)}if(m)return{error:m};if(f)for(g in d[g]=p,l(h,y.outdatedModules),y.outdatedDependencies)a.o(y.outdatedDependencies,g)&&(c[g]||(c[g]=[]),l(c[g],y.outdatedDependencies[g]));x&&(l(h,[y.moduleId]),d[g]=u)}s=void 0;for(var k,P=[],T=0;T<h.length;T++){var _=h[T],S=a.c[_];S&&(S.hot._selfAccepted||S.hot._main)&&d[_]!==u&&!S.hot._selfInvalidated&&P.push({module:_,require:S.hot._requireSelf,errorHandler:S.hot._selfAccepted})}return{dispose:function(){var e;i.forEach((function(e){delete r[e]})),i=void 0;for(var t,s=h.slice();s.length>0;){var n=s.pop(),o=a.c[n];if(o){var l={},d=o.hot._disposeHandlers;for(T=0;T<d.length;T++)d[T].call(null,l);for(a.hmrD[n]=l,o.hot.active=!1,delete a.c[n],delete c[n],T=0;T<o.children.length;T++){var u=a.c[o.children[T]];u&&(e=u.parents.indexOf(n))>=0&&u.parents.splice(e,1)}}}for(var g in c)if(a.o(c,g)&&(o=a.c[g]))for(k=c[g],T=0;T<k.length;T++)t=k[T],(e=o.children.indexOf(t))>=0&&o.children.splice(e,1)},apply:function(t){for(var s in d)a.o(d,s)&&(a.m[s]=d[s]);for(var i=0;i<n.length;i++)n[i](a);for(var r in c)if(a.o(c,r)){var o=a.c[r];if(o){k=c[r];for(var l=[],u=[],g=[],p=0;p<k.length;p++){var y=k[p],m=o.hot._acceptedDependencies[y],f=o.hot._acceptedErrorHandlers[y];if(m){if(-1!==l.indexOf(m))continue;l.push(m),u.push(f),g.push(y)}}for(var x=0;x<l.length;x++)try{l[x].call(null,k)}catch(s){if("function"==typeof u[x])try{u[x](s,{moduleId:r,dependencyId:g[x]})}catch(i){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:r,dependencyId:g[x],error:i,originalError:s}),e.ignoreErrored||(t(i),t(s))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:r,dependencyId:g[x],error:s}),e.ignoreErrored||t(s)}}}for(var b=0;b<P.length;b++){var T=P[b],_=T.module;try{T.require(_)}catch(s){if("function"==typeof T.errorHandler)try{T.errorHandler(s,{moduleId:_,module:a.c[_]})}catch(i){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:_,error:i,originalError:s}),e.ignoreErrored||(t(i),t(s))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:_,error:s}),e.ignoreErrored||t(s)}}return h}}}self.webpackHotUpdatewebpack=(t,i,r)=>{for(var l in i)a.o(i,l)&&(s[l]=i[l],e&&e.push(l));r&&n.push(r),o[t]&&(o[t](),o[t]=void 0)},a.hmrI.jsonp=function(e,t){s||(s={},n=[],i=[],t.push(c)),a.o(s,e)||(s[e]=a.m[e])},a.hmrC.jsonp=function(e,o,h,d,u,g){u.push(c),t={},i=o,s=h.reduce((function(e,t){return e[t]=!1,e}),{}),n=[],e.forEach((function(e){a.o(r,e)&&void 0!==r[e]?(d.push(l(e,g)),t[e]=!0):t[e]=!1})),a.f&&(a.f.jsonpHmr=function(e,s){t&&a.o(t,e)&&!t[e]&&(s.push(l(e)),t[e]=!0)})},a.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(a.p+a.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),a(538)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,